{
   
    "adding": [
      {
        "name": "splice",
        "shortDesc": " add element/s to an array",
        "desc": "The splice() method changes the contents of an array by removing or replacing existing elements and/or adding new elements in place.",
        "example": "const months = ['Jan', 'March', 'April', 'June'];<br> months.splice(1, 0, 'Feb'); console.log(months);",
        "output": "['Jan', 'Feb', 'March', 'April', 'June']"
      },

      {
        "name": "unshift",
        "shortDesc": "add elements to the beginning of an array",
        "desc":"The unshift() method adds one or more elements to the beginning of an array and returns the new length of the array.",
        "example": "const array1 = [1, 2, 3];<br>array1.unshift(4, 5);<br>console.log(array1);",
        "output": "[4, 5, 1, 2, 3]"
      }
      ,

      {
        "name": "push",
        "shortDesc": "add elements to the end of an array",
        "desc":"The push() method adds one or more elements to the end of an array and returns the new length of the array..",
        "example": "const animals = ['pigs', 'goats', 'sheep'];<br>animals.push('cows');<br>console.log(animals);",
        "output": "['pigs', 'goats', 'sheep', 'cows']"
      },
      {
        "name": "concat",
        "shortDesc": "add an array to another array",
        "desc":"The concat() method is used to merge two or more arrays. This method does not change the existing arrays, but instead returns a new array.",
        "example": "arr.concat();<br>",
        "output": "[1, 8]"
      }
     
     
    ],
    "deleting": [
      {
        "name": "pop",
        "shortDesc": "delete the last item",
        "desc":"The pop() method removes the last element from an array and returns that element. This method changes the length of the array.",
        "example": "arr.pop();<br>",
        "output": "[1, 8]"
      },
      {
        "name": "slice",
        "shortDesc": "remove several items",
        "desc":"The slice() method returns a shallow copy of a portion of an array into a new array object selected from start to end (end not included) where start and end represent the index of items in that array.",
        "example": "arr.slice();<br>",
        "output": "[1, 8]"
      },
      {
        "name": "shift",
        "shortDesc": "removes the first item",
        "desc":"The shift() method removes the first element from an array and returns that removed element. This method changes the length of the array.",
        "example": "arr.shift();<br>",
        "output": "[1, 8]"
      }

    ],
    "iterate": [
      {
        "name": "map",
        "shortDesc": "creates a new array from a function call",
        "desc":"The map() method creates a new array populated with the results of calling a provided function on every element in the calling array.",
        "example": "arr.map();<br>",
        "output": "[1, 8]"
      },
      {
        "name": "forEach",
        "shortDesc": "loop over the array",
        "desc":"The forEach() method executes a provided function once for each array element.",
        "example": "arr.forEach();<br>",
        "output": "[1, 8]"
      },
      {
        "name": "reduce",
        "shortDesc": "reduce an array to a single value",
        "desc":"The reduce() method executes a reducer function (that you provide) on each element of the array, resulting in single output value.",
        "example": "arr.reduce();<br>",
        "output": "[1, 8]"
      }

    ],
    "find": [
      {
        "name": "find",
        "shortDesc": "find an item in an array",
        "desc":"The find() method returns the value of the first element in the provided array that satisfies the provided testing function.",
        "example": "arr.find();<br>",
        "output": "[1, 8]"
      },
      {
        "name": "filter",
        "shortDesc": "filter for a set of values",
        "desc":" The filter() method creates an array filled with all array elements that pass a test (provided as a function)",
        "example": "arr.filter();<br>",
        "output": "[1, 8]"
      },
      {
        "name": "reduce",
        "shortDesc": "reduce an array to a single value",
        "desc":"The reduce() method executes a reducer function (that you provide) on each element of the array, resulting in single output value.",
        "example": "arr.reduce();<br>",
        "output": "[1, 8]"
      }

    ]
}